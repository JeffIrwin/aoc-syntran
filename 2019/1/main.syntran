
#include("../../utils.syntran");
//#include("../../dict_i64.syntran");

//==============================================================================

let ifile = 0;
ifile = 1;

let filenames =
[
	"test-input.txt",
	"input.txt"
];
let filename = filenames[ifile];

//==============================================================================

fn part1(): str
{
	let mat = read_i32_mat(filename);
	let v = mat[0,:];
	//println("v = ", v);

	let sum_ = sum(v / 3 - 2);

	println("part 1 = ", sum_);
	return str(sum_);
}

fn part2(): str
{
	let mat = read_i32_mat(filename);
	let v = mat[0,:];
	//println("v = ", v);

	//let sum_ = sum(v / 3 - 2);

	let sum_ = 0;
	for vi in v
	{
		while vi > 0
		{
			vi = vi / 3 - 2;
			sum_ += max(vi, 0);
		}
	}

	println("part 2 = ", sum_);
	return str(sum_);
}

//==============================================================================

fn main(): str
{
	// For unit-testing (within the syntran repo), this main fn returns a value
	// to be compared with expected results
	println();
	println("Starting AOC syntran main 2019/1");

	let p1 = ""; let p2 = "";

	// Expect 3216744:4822249
	p1 = part1();
	p2 = part2();

	println("Ending AOC syntran main");
	println();
	return p1 + ":" + p2;
}

//==============================================================================

return main();

//==============================================================================

