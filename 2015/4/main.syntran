
#include("../../utils.syntran");
//#include("../../dict_i64.syntran");
#include("../../md5.syntran");

//==============================================================================

let ifile = 0;
ifile = 1;

let filenames =
[
	"test-input.txt",
	"input.txt"
];
let filename = filenames[ifile];

//==============================================================================

fn part1(): i64
{
	let sum_ = 0'i64;

	let f = open(filename, "r");
	let str_ = readln(f);
	//println("str_ = ", str_);
	close(f);

	let i = 0;
	while true
	{
		//if (i % 10_000 == 0) println(i);

		let msg = str_ + str(i);
		let hash = md5(msg);

		if (hash[0:5] == "00000") break;
		i += 1;
	}
	sum_ = i;

	println("part 1 = ", sum_);
	return sum_;
}

fn part2(): i64
{
	let sum_ = 0'i64;

	// I think this took ~20 minutes to run

	let f = open(filename, "r");
	let str_ = readln(f);
	//println("str_ = ", str_);
	close(f);

	let i = 0;
	while true
	{
		//if (i % 10_000 == 0) println(i);

		let msg = str_ + str(i);
		let hash = md5(msg);

		if (hash[0:6] == "000000") break;
		i += 1;
	}
	sum_ = i;

	println("part 2 = ", sum_);
	return sum_;
}

//==============================================================================

fn main(): i64
{
	// For unit-testing (within the syntran repo), this main fn returns a value
	// to be compared with expected results
	println();
	println("Starting AOC syntran main 2015/4");

	let sum_ = 0'i64;

	sum_ += part1();
	sum_ += part2();

	println("Ending AOC syntran main");
	println();
	return sum_;
}

//==============================================================================

return main();

//==============================================================================

