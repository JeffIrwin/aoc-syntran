
#include("../../utils-2024.syntran");
//#include("../../dict_i64.syntran");

//==============================================================================

let ifile = 0;
ifile = 1;

let filenames =
[
	"test-input.txt",
	"input.txt"
];
let filename = filenames[ifile];

//==============================================================================

fn part1(): str
{
	let sum_ = 0'i64;

	let children = 3;
	let cats = 7;
	let samoyeds = 2;
	let pomeranians = 3;
	let akitas = 0;
	let vizslas = 0;
	let goldfish = 5;
	let trees = 3;
	let cars = 2;
	let perfumes = 1;

	let f = open(filename);
	let str_ = readln(f);
	let i = 1;
	while not eof(f)
	{
		//println("str_ = ", str_);

		let words = split_(str_, " ");
		//println("size words = ", size(words, 0));
		if size(words, 0) != 8
		{
			println("Error: unexpected number of words!");
			exit(-1);
		}

		let match_ = true;
		for iw in [2: 2: size(words, 0)]
		{
			let num = parse_i32(words[iw+1]);
			if words[iw] == "children:"
				match_ = children == num;
			else if words[iw] == "cats:"
				match_ = cats == num;
			else if words[iw] == "samoyeds:"
				match_ = samoyeds == num;
			else if words[iw] == "pomeranians:"
				match_ = pomeranians == num;
			else if words[iw] == "akitas:"
				match_ = akitas == num;
			else if words[iw] == "vizslas:"
				match_ = vizslas == num;
			else if words[iw] == "goldfish:"
				match_ = goldfish == num;
			else if words[iw] == "trees:"
				match_ = trees == num;
			else if words[iw] == "cars:"
				match_ = cars == num;
			else if words[iw] == "perfumes:"
				match_ = perfumes == num;

			if (not match_) break;
		}
		if match_
		{
			sum_ = i;
			break;
		}

		i += 1;
		str_ = readln(f);
	}
	close(f);

	println("part 1 = ", sum_);
	return str(sum_);
}

fn part2(): str
{
	let sum_ = 0'i64;

	let children = 3;
	let cats = 7;
	let samoyeds = 2;
	let pomeranians = 3;
	let akitas = 0;
	let vizslas = 0;
	let goldfish = 5;
	let trees = 3;
	let cars = 2;
	let perfumes = 1;

	let f = open(filename);
	let str_ = readln(f);
	let i = 1;
	while not eof(f)
	{
		//println("str_ = ", str_);

		let words = split_(str_, " ");
		//println("size words = ", size(words, 0));
		if size(words, 0) != 8
		{
			println("Error: unexpected number of words!");
			exit(-1);
		}

		let match_ = true;
		for iw in [2: 2: size(words, 0)]
		{
			let num = parse_i32(words[iw+1]);
			if words[iw] == "children:"
				match_ = children == num;
			else if words[iw] == "cats:"
				match_ = cats < num;
			else if words[iw] == "samoyeds:"
				match_ = samoyeds == num;
			else if words[iw] == "pomeranians:"
				match_ = pomeranians > num;
			else if words[iw] == "akitas:"
				match_ = akitas == num;
			else if words[iw] == "vizslas:"
				match_ = vizslas == num;
			else if words[iw] == "goldfish:"
				match_ = goldfish > num;
			else if words[iw] == "trees:"
				match_ = trees < num;
			else if words[iw] == "cars:"
				match_ = cars == num;
			else if words[iw] == "perfumes:"
				match_ = perfumes == num;

			if (not match_) break;
		}
		if match_
		{
			sum_ = i;
			break;
		}

		i += 1;
		str_ = readln(f);
	}
	close(f);

	println("part 2 = ", sum_);
	return str(sum_);
}

//==============================================================================

fn main(): str
{
	// For unit-testing (within the syntran repo), this main fn returns a value
	// to be compared with expected results
	println();
	println("Starting AOC syntran main 2015/16");

	let p1 = ""; let p2 = "";

	p1 = part1();
	p2 = part2();

	println("Ending AOC syntran main");
	println();
	return p1 + ":" + p2;
}

//==============================================================================

return main();

//==============================================================================

