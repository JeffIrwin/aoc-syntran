
#include("../../utils-2024.syntran");

//==============================================================================

let ifile = 0;
ifile = 1;

let filenames =
[
	"test-input.txt",
	"input.txt"
];
let filename = filenames[ifile];

//==============================================================================

fn part1(): i64
{
	//println("filename = ", filename);
	let chars = read_char_mat(filename);
	//println("chars = ", chars);

	let sum_ = count(chars == "(") - count(chars == ")");
	println("part 1 = ", sum_);
	return sum_;
}

fn part2(): i64
{
	//println("filename = ", filename);
	let chars = read_char_mat(filename);
	//println("chars = ", chars);

	let sum_ = 0'i64;
	//count(chars == "(") - count(chars == ")");

	let y = 0;
	for i in [0: size(chars, 0)]
	{
		if chars[i,0] == "("
			y += 1;
		else if chars[i,0] == ")"
			y -= 1;
		if y == -1
		{
			sum_ = i + 1;  // 1-based index
			break;
		}
	}

	println("part 2 = ", sum_);
	return sum_;
}

//==============================================================================

fn main(): i64
{
	// For unit-testing (within the syntran repo), this main fn returns a value
	// to be compared with expected results
	println();
	println("Starting AOC syntran main 2015/1");

	let sum_ = 0'i64;

	sum_ += part1();
	sum_ += part2();

	println("Ending AOC syntran main");
	println();
	return sum_;
}

//==============================================================================

return main();

//==============================================================================

